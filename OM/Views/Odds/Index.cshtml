@model OM.Models.OMViewModel

@{
    ViewBag.Title = "Oddsmatching Software";
}
<br /><br />

<label class="col-sm-2" for="dropdownlistBookmaker">Bookmaker:  </label><input style="margin-left:10px;" id="dropdownlistBookmaker" />
<br/>
<br />
<label class="col-sm-2"  for="dropdownlistExchange">Exchange:  </label><input style="margin-left:10px;" id="dropdownlistExchange" />
<br/><br />
<div id="grid"></div>
<!-- Modal -->
<div class="modal fade" id="calcModal" tabindex="-1" role="dialog" aria-labelledby="calcModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="calcModalLabel">Calculator</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="dropdown">
                            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                Normal
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                <li><a href="#">Normal</a></li>
                                <li><a href="#">Free Bet (Stake Not Returned)</a></li>
                                <li><a href="#">Free Bet (Stake Returned)</a></li>
                            </ul>
                        </div>
                        <div class="row">
                            <label for="backStakeInput">Back Stake:  </label><input style="margin-left:10px;" id="backStakeInput" />
                        </div>
                        <div class="row">
                            <label for="backOddsInput">Back Odds:  </label><input style="margin-left:10px;" id="backOddsInput" />
                        </div>
                        <div class="row">
                            <label for="layOddsInput">Lay Odds:  </label><input style="margin-left:10px;" id="layOddsInput" />
                        </div>
                        <div class="row">
                            <button class="btn btn-default">Calculate</button>
                        </div>
                     </div>
                 </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        //this script should be in a javascript file of its own with the variables declared on the object.
        //function openModal(e){
        //    var test = e;
        //    $('#calcModal').modal('show')
        //};

        $(document).ready(function () {

            $("#dropdownlistBookmaker").kendoDropDownList({
                dataTextField: "BookmakerName",
                dataValueField: "BookmakerId",
                dataSource: @Html.Raw(Json.Encode(Model.Bookmakers)),
                change: function(e) {
                    var filters = $("#grid").data("kendoGrid").dataSource.filter();
                    var bookmakerFilters = [];
                    if(typeof filters !== "undefined")
                    {
                        for(var i = 0; i < filters.filters.length; i++)
                        {
                            if(filters.filters[i].field === "Bookmaker"){
                                filters.filters.splice(i, 1);
                            }
                        }
                        bookmakerFilters = bookmakerFilters.concat(filters.filters)
                    }
                    if(this.value() != -1){
                        bookmakerFilters.push({field: "Bookmaker", operator: "eq", value: this.text() });
                    }
                    
                    $("#grid").data("kendoGrid").dataSource.filter({
                        logic: "and",
                        filters: bookmakerFilters
                    });
                }
            });

            $("#dropdownlistExchange").kendoDropDownList({
                dataTextField: "BookmakerName",
                dataValueField: "BookmakerId",
                dataSource: @Html.Raw(Json.Encode(Model.Bookmakers)),
                change: function(e) {
                    var filters = $("#grid").data("kendoGrid").dataSource.filter();
                    var exchangeFilters = [];
                    if(typeof filters !== "undefined")
                    {
                        for(var i = 0; i < filters.filters.length; i++)
                        {
                            if(filters.filters[i].field === "Exchange"){
                                filters.filters.splice(i, 1);
                            }
                        }
                        exchangeFilters.concat(filter.filters);
                    }
                    if(this.value() != -1){
                        exchangeFilters.push({field: "Exchange", operator: "eq", value: this.text() });
                    }
                    
                    $("#grid").data("kendoGrid").dataSource.filter({
                        logic: "and",
                        filters: exchangeFilters
                    });
                }
            });

            $('<div class="k-loading-mask" style="width: 100%; height: 100%; top: 0px; left: 0px;"><span class="k-loading-text">Loading...</span><div class="k-loading-image"></div><div class="k-loading-color"></div></div>').appendTo('#grid .k-grid-content');

            kendo.culture("en-GB");
            $("#grid").kendoGrid({
                columns: [{
                    field: "EventName",
                    title: "Event Name",
                    filterable: false,
                    sortable: false
                }, {
                    field: "Bet",
                    title: "Bet",
                    filterable: false,
                    sortable: false
                }, {
                    field: "Rating",
                    title: "Rating",
                    filterable: true,
                    type: 'number'
                }, {
                    field: "Bookmaker",
                    title: "Bookmaker",
                    template: "<img class='img-responsive' src='../Images/#: Bookmaker.replace(' ', '').toLowerCase() #.jpg'/>",
                    filterable: false,
                    sortable:false
                },  {
                    field: "BookmakerOdds",
                    title: "Bookmaker Odds",
                    filterable: true,
                    type: 'number'
                }, {
                    field: "ExchangeOdds",
                    title: "Exchange Odds",
                    type: 'number'
                },{
                    field: "Exchange",
                    title: "Exchange",
                    template: "<img class='img-responsive' src='../Images/#: Exchange.replace(' ', '').toLowerCase() #.jpg'/>",
                    filterable: false,
                    sortable: false
                },{
                    field: "MoneyInMarket",
                    title: "Money In Market" ,
                    format: "{0:c}",
                    filterable: false
                },
                //{
                //    field: "URL",
                //    title: "Link to Offer" ,
                //    filterable: false,
                //    template: "<a href='#: URL #'><button onclick='openModal()' type='button' class='btn btn-default'><i class='fa fa-external-link' aria-hidden='true'></i></button></a>"
                //},
                {
                    title: "Calculate" ,
                    filterable: false,
                    //template: "<i class='' onclick='openModal()'></i>"
                    template: "<button onclick='om.openModal(this)' type='button' class='btn btn-default'><i class='fa fa-calculator' aria-hidden='true'></i></button>"
                }],
                sortable: {
                    mode: "multiple"
                },
                
                filterable: true,
                dataSource: {
                    transport: {
                        read: "/Odds/GetOddsData",
                        dataType: "json"
                        // enable server paging
                    },
                    pageSize: 20,
                    schema: {
                        data: "data", // records are returned in the "data" field of the response
                        total: "total" // total number of records is in the "total" field of the response
                    },
                    serverPaging: true, 
                },
                pageable: {
                    pageSize: 20
                }
            });
        });
    </script>
}

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EventName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Bet)
        </th>
        <th>Bookmaker</th>
        <th style="max-width:60px;"></th>
        <th>
            Back
        </th>
        <th>
            Lay
        </th>
        <th style="max-width:60px;"></th>
        <th>Exchange</th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MoneyInMarket)
        </th>
    </tr>*@

@*@foreach (var item in Model) {
        var bookmakerimageurl = "../../Images/" + item.Bookmaker.ToLower().Replace(" ", "") + ".jpg";
        var exchangeimageurl = "../../Images/" + item.Exchange.ToLower().Replace(" ", "") + ".jpg";
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EventName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bet)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bookmaker)
            </td>
            <td style="max-width:60px;">
                <img class="img-responsive" src="@bookmakerimageurl" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookmakerOdds)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExchangeOdds)
            </td>
            <td style="max-width:60px;">
                <img class="img-responsive" src="@exchangeimageurl" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Exchange)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MoneyInMarket)
            </td>
        </tr>
    }

    </table>*@

